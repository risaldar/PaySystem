/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-06-25 19:05:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.install;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import timeSheet.Install;
import timeSheet.SessionConst;
import timeSheet.database.DBType;

public final class installDatabase_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/timeSheet.tld", Long.valueOf(1621248506000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

    Install install = (Install) session.getAttribute(SessionConst.install.toString());
    if (install != null) {
        install.setCompanyName(request.getParameter("companyName"));
    } else {

      out.write("\n");
      out.write("<script type=\"text/javascript\">location.replace(\"index.jsp\")</script>\n");

    }

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Pay System Install</title>\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("        @import url('../display.css');\n");
      out.write("    </style>\n");
      out.write("    <script type=\"text/javascript\" src=\"scripts.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <h1>Pay System Installer</h1>\n");
      out.write("\n");
      out.write("\n");
      out.write("    <form action=\"installUser.jsp\" method=\"post\">\n");
      out.write("        <div class=\"login\">\n");
      out.write("            <p>Next up we need to get some information about your desired database system.</p>\n");
      out.write("            <p>We currently have a choice to work with 2 different databases, H2 and MySQL, and we can connect to the H2\n");
      out.write("                database either through and embedded connection or a TCP connection.</p>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"login\">\n");
      out.write("            <label for=\"h2\">H2</label><input class=\"field\" type=\"radio\" name=\"dbType\" value=\"");
      out.print(DBType.H2.toString());
      out.write("\" id=\"h2\" checked=\"true\" onclick=\"setupDBInputs()\"/><br/>\n");
      out.write("            <label for=\"h2E\">H2 Embedded</label><input class=\"field\" type=\"radio\" name=\"dbType\" value=\"");
      out.print(DBType.H2Embedded.toString());
      out.write("\" id=\"h2E\" onclick=\"setupDBInputs()\"/><br/>\n");
      out.write("            <label for=\"mysql\">MySQL</label><input class=\"field\" type=\"radio\" name=\"dbType\" value=\"");
      out.print(DBType.MySQL.toString());
      out.write("\" id=\"mysql\" onclick=\"setupDBInputs()\"/><br/>\n");
      out.write("        </div>\n");
      out.write("        <br />\n");
      out.write("        <div class=\"login\">\n");
      out.write("            <label for=\"DBLocation\" id=\"dbChoice\">Database Location:</label><input class=\"field\" type=\"text\" id=\"DBLocation\" name=\"DBLocation\" value=\"/~/.PaySystem/paySystem\"/><br />\n");
      out.write("            <label for=\"DBUserName\">Database user name:</label><input class=\"field\" type=\"text\" id=\"DBUserName\" name=\"DBUserName\"/><br/>\n");
      out.write("            <label for=\"DBPassword\">Database password:</label><input class=\"field\" type=\"password\" id=\"DBPassword\" name=\"DBPassword\"/><br/>\n");
      out.write("        </div>\n");
      out.write("        <br/>\n");
      out.write("        <div>\n");
      out.write("                <input class=\"submit\" type=\"submit\" value=\"Next\">\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_timeSheet_005ffooter_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_timeSheet_005ffooter_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  timeSheet:footer
    timeSheet.tags.FooterTag _jspx_th_timeSheet_005ffooter_005f0 = (timeSheet.tags.FooterTag) _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody.get(timeSheet.tags.FooterTag.class);
    boolean _jspx_th_timeSheet_005ffooter_005f0_reused = false;
    try {
      _jspx_th_timeSheet_005ffooter_005f0.setPageContext(_jspx_page_context);
      _jspx_th_timeSheet_005ffooter_005f0.setParent(null);
      int _jspx_eval_timeSheet_005ffooter_005f0 = _jspx_th_timeSheet_005ffooter_005f0.doStartTag();
      if (_jspx_th_timeSheet_005ffooter_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody.reuse(_jspx_th_timeSheet_005ffooter_005f0);
      _jspx_th_timeSheet_005ffooter_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_timeSheet_005ffooter_005f0, _jsp_getInstanceManager(), _jspx_th_timeSheet_005ffooter_005f0_reused);
    }
    return false;
  }
}
