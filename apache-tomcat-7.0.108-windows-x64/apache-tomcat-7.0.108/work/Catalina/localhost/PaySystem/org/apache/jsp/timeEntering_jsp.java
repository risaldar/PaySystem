/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-06-25 20:34:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import timeSheet.PayPeriod;
import timeSheet.SessionConst;
import timeSheet.TimeEntering;
import timeSheet.UtilWeb;
import timeSheet.database.entity.Employee;
import timeSheet.database.manager.EmployeeManager;
import timeSheet.database.manager.HourTypeManager;
import java.text.ParseException;
import java.util.Date;

public final class timeEntering_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/timeSheet.tld", Long.valueOf(1621248506000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftimeSheet_005fheadDefault_0026_005fdisplayCalendar_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftimeSheet_005fmenu_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftimeSheet_005fheader_0026_005fsub_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ftimeSheet_005fheadDefault_0026_005fdisplayCalendar_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftimeSheet_005fmenu_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftimeSheet_005fheader_0026_005fsub_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ftimeSheet_005fheadDefault_0026_005fdisplayCalendar_005fnobody.release();
    _005fjspx_005ftagPool_005ftimeSheet_005fmenu_005fnobody.release();
    _005fjspx_005ftagPool_005ftimeSheet_005fheader_0026_005fsub_005fnobody.release();
    _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    ");
 if (UtilWeb.checkSession(out, request, false)) return; 
      out.write("\n");
      out.write("    ");

        Employee employee = (Employee) session.getAttribute(SessionConst.employee.name());
        Employee sessionEmployee = employee;
        if (request.getParameter("employeeID") != null) {
            EmployeeManager manager = new EmployeeManager();
            employee = manager.getEmployee(Integer.parseInt(request.getParameter("employeeID")));
        }
        PayPeriod period = new PayPeriod();
        if (request.getParameter("date") != null) {
            Date date = null;
            try {
                date = UtilWeb.getDateFormat().parse(request.getParameter("date"));
            } catch (ParseException e) {
                e.printStackTrace();
            }
            period = new PayPeriod(date);
        }

        HourTypeManager hourTypeManager = new HourTypeManager();
        TimeEntering lib = new TimeEntering(sessionEmployee, employee, period);
    
      out.write("\n");
      out.write("    <title>PaySystem - Manage User</title>\n");
      out.write("    ");
      if (_jspx_meth_timeSheet_005fheadDefault_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");
      if (_jspx_meth_timeSheet_005fmenu_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_timeSheet_005fheader_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    ");

        int sessionId = ((Employee) session.getAttribute(SessionConst.employee.name())).getId();
        if(employee.getId() == sessionId) {
      out.write("\n");
      out.write("            <p>You can only report time for the current pay period.</p>\n");
      out.write("      ");
}
    
      out.write("\n");
      out.write("    <form action=\"library/saveTime.jsp\" method=\"post\">\n");
      out.write("        <div class=\"login\">\n");
      out.write("            <label for=\"date\">Day:</label><select class=\"field\" id=\"date\" name='date' tabindex=\"1\">");
      out.print(period.getPayPeriodSelections());
      out.write("</select><br/>\n");
      out.write("            <label for=\"type\">Type:</label><select class=\"field\" id=\"type\" name=\"type\" tabindex=\"2\">");
      out.print(hourTypeManager.getOptions(false));
      out.write("</select> <br/>\n");
      out.write("            <label for=\"hours\">Hours worked:</label><input class=\"field\" id=\"hours\" name=\"hours\" type=\"text\" tabindex=\"3\"><br/>\n");
      out.write("            <input type=\"hidden\" name=\"employeeID\" value=\"");
      out.print(employee.getId());
      out.write("\">\n");
      out.write("            <input type=\"hidden\" name=\"enteringID\" value=\"");
      out.print(sessionId);
      out.write("\">\n");
      out.write("            <input type=\"hidden\" name=\"location\" value=\"timeEntering.jsp\">\n");
      out.write("        </div>\n");
      out.write("        <button tabindex=\"4\">Submit Hours</button>\n");
      out.write("        <br/>\n");
      out.write("    </form>\n");
      out.write("    <div class=\"login\">\n");
      out.write("        <label for=\"startTime\">Time Started(h:m):</label>\n");
      out.write("        <label class=\"opposite\" for=\"startPM\">PM</label><input class=\"field\" type=\"checkbox\" id=\"startPM\" tabindex=\"6\">\n");
      out.write("        <input class=\"field\" id=\"startTime\" type=\"text\" tabindex=\"5\"><br/>\n");
      out.write("        <label for=\"endTime\">Time Ended(h:m):</label>\n");
      out.write("        <label class=\"opposite\" for=\"endPM\">PM</label><input class=\"field\" type=\"checkbox\" id=\"endPM\" checked tabindex=\"8\">\n");
      out.write("        <input class=\"field\" id=\"endTime\" type=\"text\" tabindex=\"7\"><br/>\n");
      out.write("        <label for=\"lunchTime\">Duration of Lunch(h:m):</label><input style=\"width:202px;\" class=\"field\" id=\"lunchTime\" type=\"text\" tabindex=\"9\"><br/>\n");
      out.write("        <button onclick=\"calculateTime();\" tabindex=\"9\">Calculate Time</button>\n");
      out.write("    </div>\n");
      out.write("    <br/>\n");
      out.write("    ");

        out.println(lib.getTimeTable("timeEntering.jsp"));
        out.println(lib.getPayPeriodTotals());
    
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_timeSheet_005ffooter_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_timeSheet_005fheadDefault_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  timeSheet:headDefault
    timeSheet.tags.CommonHeadTag _jspx_th_timeSheet_005fheadDefault_005f0 = (timeSheet.tags.CommonHeadTag) _005fjspx_005ftagPool_005ftimeSheet_005fheadDefault_0026_005fdisplayCalendar_005fnobody.get(timeSheet.tags.CommonHeadTag.class);
    boolean _jspx_th_timeSheet_005fheadDefault_005f0_reused = false;
    try {
      _jspx_th_timeSheet_005fheadDefault_005f0.setPageContext(_jspx_page_context);
      _jspx_th_timeSheet_005fheadDefault_005f0.setParent(null);
      // /timeEntering.jsp(42,4) name = displayCalendar type = java.lang.Boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_timeSheet_005fheadDefault_005f0.setDisplayCalendar(false);
      int _jspx_eval_timeSheet_005fheadDefault_005f0 = _jspx_th_timeSheet_005fheadDefault_005f0.doStartTag();
      if (_jspx_th_timeSheet_005fheadDefault_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ftimeSheet_005fheadDefault_0026_005fdisplayCalendar_005fnobody.reuse(_jspx_th_timeSheet_005fheadDefault_005f0);
      _jspx_th_timeSheet_005fheadDefault_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_timeSheet_005fheadDefault_005f0, _jsp_getInstanceManager(), _jspx_th_timeSheet_005fheadDefault_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_timeSheet_005fmenu_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  timeSheet:menu
    timeSheet.tags.MenuTag _jspx_th_timeSheet_005fmenu_005f0 = (timeSheet.tags.MenuTag) _005fjspx_005ftagPool_005ftimeSheet_005fmenu_005fnobody.get(timeSheet.tags.MenuTag.class);
    boolean _jspx_th_timeSheet_005fmenu_005f0_reused = false;
    try {
      _jspx_th_timeSheet_005fmenu_005f0.setPageContext(_jspx_page_context);
      _jspx_th_timeSheet_005fmenu_005f0.setParent(null);
      int _jspx_eval_timeSheet_005fmenu_005f0 = _jspx_th_timeSheet_005fmenu_005f0.doStartTag();
      if (_jspx_th_timeSheet_005fmenu_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ftimeSheet_005fmenu_005fnobody.reuse(_jspx_th_timeSheet_005fmenu_005f0);
      _jspx_th_timeSheet_005fmenu_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_timeSheet_005fmenu_005f0, _jsp_getInstanceManager(), _jspx_th_timeSheet_005fmenu_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_timeSheet_005fheader_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  timeSheet:header
    timeSheet.tags.HeaderTag _jspx_th_timeSheet_005fheader_005f0 = (timeSheet.tags.HeaderTag) _005fjspx_005ftagPool_005ftimeSheet_005fheader_0026_005fsub_005fnobody.get(timeSheet.tags.HeaderTag.class);
    boolean _jspx_th_timeSheet_005fheader_005f0_reused = false;
    try {
      _jspx_th_timeSheet_005fheader_005f0.setPageContext(_jspx_page_context);
      _jspx_th_timeSheet_005fheader_005f0.setParent(null);
      // /timeEntering.jsp(46,4) name = sub type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_timeSheet_005fheader_005f0.setSub("Report Time Worked");
      int _jspx_eval_timeSheet_005fheader_005f0 = _jspx_th_timeSheet_005fheader_005f0.doStartTag();
      if (_jspx_th_timeSheet_005fheader_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ftimeSheet_005fheader_0026_005fsub_005fnobody.reuse(_jspx_th_timeSheet_005fheader_005f0);
      _jspx_th_timeSheet_005fheader_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_timeSheet_005fheader_005f0, _jsp_getInstanceManager(), _jspx_th_timeSheet_005fheader_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_timeSheet_005ffooter_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  timeSheet:footer
    timeSheet.tags.FooterTag _jspx_th_timeSheet_005ffooter_005f0 = (timeSheet.tags.FooterTag) _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody.get(timeSheet.tags.FooterTag.class);
    boolean _jspx_th_timeSheet_005ffooter_005f0_reused = false;
    try {
      _jspx_th_timeSheet_005ffooter_005f0.setPageContext(_jspx_page_context);
      _jspx_th_timeSheet_005ffooter_005f0.setParent(null);
      int _jspx_eval_timeSheet_005ffooter_005f0 = _jspx_th_timeSheet_005ffooter_005f0.doStartTag();
      if (_jspx_th_timeSheet_005ffooter_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ftimeSheet_005ffooter_005fnobody.reuse(_jspx_th_timeSheet_005ffooter_005f0);
      _jspx_th_timeSheet_005ffooter_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_timeSheet_005ffooter_005f0, _jsp_getInstanceManager(), _jspx_th_timeSheet_005ffooter_005f0_reused);
    }
    return false;
  }
}
