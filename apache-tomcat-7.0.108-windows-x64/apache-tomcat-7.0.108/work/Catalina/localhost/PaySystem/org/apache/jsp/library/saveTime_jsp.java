/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-06-25 20:51:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.library;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import timeSheet.SessionConst;
import timeSheet.UtilWeb;
import timeSheet.database.entity.Employee;
import timeSheet.database.entity.Hours;
import timeSheet.database.manager.EmployeeManager;
import timeSheet.database.manager.HourTypeManager;
import timeSheet.database.manager.HoursManager;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;

public final class saveTime_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

    Hours hoursWorked = new Hours();

    hoursWorked.setDateEntered(new Date());
    hoursWorked.setEmployeeApproval(true);
    hoursWorked.setManagerApproval(false);
    double hours;
    try {
        hours = Double.parseDouble(request.getParameter("hours"));
    } catch(NumberFormatException e) {
        hours = 0.0;
    }
    hoursWorked.setHours(hours);
    String day = request.getParameter("date");
    if(day != null) {
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_MONTH, Integer.parseInt(day));
        hoursWorked.setDate(cal.getTime());
    } else {
        day = request.getParameter("fullDate");
        Date date = null;
        try {
            date = UtilWeb.getDateFormat().parse(day);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        hoursWorked.setDate(date);
    }
    Employee employee = (Employee) session.getAttribute(SessionConst.employee.name());
    Employee sessionEmployee = (Employee) session.getAttribute(SessionConst.employee.name());
    String employeeID = request.getParameter("employeeID");
    if(employeeID != null) {
        EmployeeManager employeeManager = new EmployeeManager();
        employee = employeeManager.getEmployee(Integer.parseInt(employeeID));
    }
    hoursWorked.setEmployee(employee);
    hoursWorked.setEnteredByEmployee(sessionEmployee);
    if(!hoursWorked.isEnteredByEmployee()) { // We want to make sure that this is known as not being approved by the employee.
        hoursWorked.setEmployeeApproval(false);
        hoursWorked.setManagerApproval(true);
    }
    String type = request.getParameter("type");
    HourTypeManager man = new HourTypeManager();
    if(type != null) {
        int typeID = Integer.parseInt(type);
        hoursWorked.setType(man.getType(typeID));
    } else {
        hoursWorked.setType(man.getDefaultType());
    }
    HoursManager manager = new HoursManager();

      out.write("\n");
      out.write("<html>\n");
      out.write("<body>\n");
      out.write("<script type=\"text/javascript\">\n");

    try {
        hoursWorked.validate();
        manager.saveHours(hoursWorked);
        out.print("alert('Successfully submitted the hours.');");
    } catch (Exception e) {
        out.print("alert('Unable to save the hours. Reason: " + e.getMessage() + "');");
    }

      out.write("\n");
      out.write("    window.location.replace(\"../");
      out.print(request.getParameter("location"));
      out.write("?empID=");
      out.print(employee.getId());
      out.write("\");\n");
      out.write("</script>\n");
      out.write("<a href=\"../dashboard.jsp\">Go back to the Dashboard here.</a>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
